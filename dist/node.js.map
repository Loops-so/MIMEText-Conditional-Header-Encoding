{"version":3,"sources":["../src/entrypoints/node.ts"],"names":["envctx","data","EOL","v","createMimeMessage","options","MIMEMessage"],"mappings":";;;;;AAIA,IAAMA,CAAS,CAAA,CACX,QAAU,CAAA,SAAmBC,CAAc,CAAA,CACvC,OAAQ,MAAO,CAAA,IAAA,CAAKA,CAAI,CAAA,CAAG,QAAS,CAAA,QAAQ,CAChD,CAAA,CACA,gBAAiB,SAA0BA,CAAAA,CAAc,CACrD,OAAQ,MAAO,CAAA,IAAA,CAAKA,CAAI,CAAA,CAAG,SAAS,QAAQ,CAAA,CACvC,OAAQ,CAAA,KAAA,CAAO,GAAG,CAAA,CAClB,OAAQ,CAAA,KAAA,CAAO,GAAG,CAClB,CAAA,OAAA,CAAQ,KAAO,CAAA,EAAE,CAC1B,CAAA,CACA,GAAKC,CAAAA,GAAAA,CACL,oBAAsBC,CACN,EAAA,CAAA,CAAA,WAAA,CAAYA,CAAC,CAEjC,CAEO,CAAA,SAASC,CAAmBC,CAAAA,GAAAA,CAA8B,CAAE,4BAA8B,CAAA,CAAA,CAAM,CAAgB,CAAA,CACnH,OAAO,IAAIC,CAAYN,CAAAA,CAAAA,CAAQK,GAAO,CAC1C","file":"node.js","sourcesContent":["import { EOL } from 'node:os'\nimport * as mime from 'mime-types'\nimport { MIMEMessage, MIMEMessageOptions } from '../MIMEMessage.js'\n\nconst envctx = {\n    toBase64: function toBase64 (data: string) {\n        return (Buffer.from(data)).toString('base64')\n    },\n    toBase64WebSafe: function toBase64WebSafe (data: string) {\n        return (Buffer.from(data)).toString('base64')\n            .replace(/\\+/g, '-')\n            .replace(/\\//g, '_')\n            .replace(/=+$/, '')\n    },\n    eol: EOL,\n    validateContentType: (v: string): string | false => {\n        return mime.contentType(v)\n    }\n}\n\nexport function createMimeMessage (options: MIMEMessageOptions = { skipEncodingPureAsciiHeaders: false }): MIMEMessage {\n    return new MIMEMessage(envctx, options)\n}\n\nexport { MIMEMessage } from '../MIMEMessage.js'\nexport { Mailbox } from '../Mailbox.js'\nexport { MIMETextError } from '../MIMETextError.js'\nexport { MIMEMessageHeader } from '../MIMEMessageHeader.js'\nexport { MIMEMessageContent } from '../MIMEMessageContent.js'\n\nexport type * from '../MIMEMessage.js'\nexport type * from '../Mailbox.js'\nexport type * from '../MIMETextError.js'\nexport type * from '../MIMEMessageHeader.js'\nexport type * from '../MIMEMessageContent.js'\n"]}